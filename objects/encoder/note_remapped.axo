<objdefs appVersion="1.0.12">
   <obj.normal id="note_remapped" uuid="a1b2c3d4-1234-5678-9abc-def012345678">
      <sDescription>noteOn issues a pulse whenever a note-on occurs,
note returns the remapped note number (60-67→0-7, 37-40→8-11).
hold is 1 if any keys are on hold.</sDescription>
      <author>Robert Schirmer (modified for note remapping)</author>
      <license>BSD</license>
      <helpPatch>poly.axh</helpPatch>
      <inlets/>
      <outlets>
         <int32 name="note" description="remapped note on note-on"/>
         <bool32.pulse name="noteOn" description="pulse on note-on"/>
         <bool32 name="gate" description="any notes on hold?"/>
      </outlets>
      <displays/>
      <params/>
      <attribs>
         <spinner name="startNote" MinValue="0" MaxValue="127" DefaultValue="0"/>
         <spinner name="endNote" MinValue="0" MaxValue="127" DefaultValue="127"/>
      </attribs>
      <includes/>
      <code.declaration><![CDATA[int8_t _note;
uint8_t count;
bool trigon;

int8_t remap_note(int8_t midi_note) {
    // Remap according to table:
    // 60-67 -> 0-7
    // 37,39,41,43 -> 8,9,10,11
    if (midi_note >= 60 && midi_note <= 67) {
        return midi_note - 60;  // 60->0, 61->1, ..., 67->7
    } else if (midi_note == 37) {
        return 8;
    } else if (midi_note == 39) {
        return 9;
    } else if (midi_note == 41) {
        return 10;
    } else if (midi_note == 43) {
        return 11;
    }
    // For any other notes, return as-is (or you could return -1 to ignore)
    return midi_note;
}]]></code.declaration>
      <code.init><![CDATA[_note = 0;]]></code.init>
      <code.krate><![CDATA[outlet_noteOn = trigon;
outlet_note = _note;
trigon = 0;

outlet_gate = bool (count);]]></code.krate>
      <code.midihandler><![CDATA[if ((status == MIDI_NOTE_ON + attr_midichannel) && (data2)) {
  if ((data1 >= attr_startNote)&&(data1 <= attr_endNote))
  {
    trigon = 1;
    count += 1;
    _note = remap_note(data1);  // Apply note remapping
  }
}
if (((status == MIDI_NOTE_ON + attr_midichannel) && (!data2))||(status == MIDI_NOTE_OFF + attr_midichannel)) 
{
 if ((data1 >= attr_startNote)&&(data1 <= attr_endNote))
{
if (count) count -= 1;
}
 }
else if ((status == attr_midichannel + MIDI_CONTROL_CHANGE)&&(data1 == MIDI_C_ALL_NOTES_OFF)) {
   count = 0;
}]]></code.midihandler>
   </obj.normal>
</objdefs> 